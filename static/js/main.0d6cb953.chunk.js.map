{"version":3,"sources":["components/Navbar/NavLink/NavLink.module.scss","components/Navbar/Navbar.module.scss","components/About/About.module.scss","state/store/index.js","components/Keypad/Keypad.module.scss","components/Navbar/NavLink/NavLink.js","components/Navbar/Navbar.js","components/PhoneIcon/phone.svg","components/Keypad/Keypad.js","components/Contacts/Contacts.js","components/NotFound/NotFound.js","components/Contact/Contact.js","components/NewContact/Input/Input.js","components/NewContact/schema.js","components/NewContact/NewContact.js","components/About/About.js","components/App/App.js","components/ReduxProvider/ReduxProvider.js","serviceWorker.js","index.js","state/modules/index.js","state/store/configureStore.prod.js","state/modules/contacts.js"],"names":["module","exports","root","active","icon","require","input","buttonRow","button","disabled","numberButton","numberLabel","callButton","backspaceButton","NavLink","_ref","to","label","react_default","a","createElement","es_NavLink","className","classNames","styles","activeClassName","aria-label","concat","react_fontawesome_index_es","size","fixedWidth","Navbar","Navbar_default","variant","bg","fixed","Nav_default","role","Navbar_NavLink_NavLink","faTh","faBookUser","faUserPlus","faQuestionCircle","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","phone_ref","fill","fillRule","d","phone_SvgPhone","props","viewBox","__webpack_require__","p","newPhoneNumber","value","PhoneNumber","phoneNumber","getNumber","connect","_ref5","router","pushRoute","push","backspaceButtonTimer","_matchSelector$params","createMatchSelector","matchSelector","params","numberPath","_useState","useState","_useState2","slicedToArray","number","setNumber","numberInput","React","createRef","focusNumberInput","isMobile","focus","handleBackspaceButtonPress","setTimeout","clearKeypad","handleBackspaceButtonRelease","clearTimeout","location","pathname","callNumber","event","preventDefault","window","open","undefinedNumber","ButtonRow","_ref3","children","_ref3$className","Row_default","document","documentElement","clientHeight","NumberCol","_ref4","_ref4$className","Col_default","Button_default","onClick","handleNumberButton","Form_default","onSubmit","Helmet","title","Control","type","onChange","_ref2","ref","Container_default","reduce","acc","idx","buttons","rows","slice","undefined","height","OverlayTrigger_default","placement","overlay","Tooltip_default","id","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","faBackspace","contacts","list","ListGroup_default","map","name","phone","email","Item","action","as","Link","encodeURI","NotFound","faMapMarkerQuestion","_matchSelector$params2","contactURI","contact","find","decodeURI","components_NotFound_NotFound","Icon","faChevronLeft","faPhone","href","faEnvelope","Input","objectWithoutProperties","FormGroup_default","FormLabel_default","htmlFor","charAt","toUpperCase","FormControl_default","defaultProps","object","shape","string","required","test","toJSON","possible","mapDispatchToProps","addContact","_addContact","emptyContact","givenName","familyName","invalidFields","setContact","_useState3","_useState4","dirty","setDirty","_useState5","_useState6","errors","setErrors","_useState7","_useState8","invalid","setInvalid","handleChange","_ref2$target","objectSpread","defineProperty","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","newContact","_errors","wrap","_context","prev","next","schema","validate","t0","forEach","error","includes","stop","_x","Alert_default","Row","Group","Label","faUser","placeholder","isInvalid","autoFocus","NewContact_Input_Input","About","Date","getFullYear","App","Fragment","defaultTitle","components_Navbar_Navbar","Switch","Route","path","exact","render","Redirect","component","Keypad","Contacts","Contact","NewContact","ReduxProvider","store","persistor","history","es","integration_react","loading","esm","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","configureStore","ConnectedRoot","components_ReduxProvider_ReduxProvider","components_App_App","rootElement","getElementById","hasChildNodes","hydrate","src_ConnectedRoot","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","contactsPersistConfig","storage","stateReconciler","autoMergeLevel2","createRootReducer","combineReducers","connectRouter","persistReducer","createBrowserHistory","__webpack_exports__","createStore","applyMiddleware","routerMiddleware","persistStore","_Users_grant_Git_CSCI_4849_Web_Accessibility_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.0d6cb953.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavLink_root__CTgS_\",\"active\":\"NavLink_active__2ugHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navbar_root__2DIhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"About_icon__HCTJH\"};","module.exports =\n    process.env.NODE_ENV === 'development'\n        ? require('./configureStore.dev')\n        : require('./configureStore.prod');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Keypad_root__3lmgl\",\"input\":\"Keypad_input__33Efw\",\"buttonRow\":\"Keypad_buttonRow__Q0mbz\",\"button\":\"Keypad_button__3RTSB\",\"disabled\":\"Keypad_disabled__tHv9S\",\"numberButton\":\"Keypad_numberButton__3Bvp0\",\"numberLabel\":\"Keypad_numberLabel__2gcSt\",\"callButton\":\"Keypad_callButton__YwON9\",\"backspaceButton\":\"Keypad_backspaceButton__3RNr6\"};","import React from 'react';\nimport { string, oneOfType, object, array } from 'prop-types';\nimport classNames from 'classnames';\nimport { NavLink as RouterNavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './NavLink.module.scss';\n\nconst NavLink = ({ to, label, icon }) => (\n    <RouterNavLink\n        to={to}\n        className={classNames(styles.root, 'px-4', 'py-2')}\n        activeClassName={styles.active}\n        aria-label={`To ${label}`}\n    >\n        <FontAwesomeIcon\n            icon={icon}\n            size=\"lg\"\n            fixedWidth\n            className={classNames('d-block', 'm-auto')}\n        />\n        <small>{label}</small>\n    </RouterNavLink>\n);\n\nNavLink.propTypes = {\n    to: string.isRequired,\n    label: string.isRequired,\n    icon: oneOfType([object, array, string]).isRequired\n};\n\nexport default NavLink;\n","import React from 'react';\nimport classNames from 'classnames';\nimport BootstrapNavbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {\n    faTh,\n    faBookUser,\n    faUserPlus,\n    faQuestionCircle\n} from '@fortawesome/pro-solid-svg-icons';\nimport NavLink from './NavLink';\nimport styles from './Navbar.module.scss';\n\nconst Navbar = () => (\n    <BootstrapNavbar\n        variant=\"light\"\n        bg=\"light\"\n        fixed=\"bottom\"\n        className={classNames(styles.root, 'p-0', 'bg-light')}\n    >\n        <Nav className=\"mx-auto\" role=\"navigation\">\n            <NavLink to=\"/keypad\" label=\"Keypad\" icon={faTh} />\n            <NavLink to=\"/contacts\" label=\"Contacts\" icon={faBookUser} />\n            <NavLink to=\"/new-contact\" label=\"New Contact\" icon={faUserPlus} />\n            <NavLink to=\"/about\" label=\"About\" icon={faQuestionCircle} />\n        </Nav>\n    </BootstrapNavbar>\n);\n\nexport default Navbar;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FFF\",\n  fillRule: \"nonzero\",\n  d: \"M14.677.063c-.638.147-1.216.503-1.812.763-1.342.584-2.655 1.173-3.927 1.9-1.65.944-3.356 2.052-4.656 3.455-7.39 7.975-3.71 19.795-.146 28.708.794 1.986 1.624 3.976 2.574 5.893 2.023 4.076 4.173 8.075 6.823 11.786 3.058 4.28 6.618 8.098 10.192 11.937 1.74 1.87 3.376 3.906 5.192 5.697 1.415 1.395 3.03 2.629 4.487 3.987 4.358 4.062 8.614 8.227 13.44 11.75 4.31 3.145 8.955 5.607 13.743 7.92 5.302 2.56 10.972 4.578 16.764 5.621 4.001.72 8.075.85 11.93-.646 2.181-.846 4.035-2.378 5.58-4.109 1.846-2.066 3.146-4.574 4.237-7.101.506-1.172 1.107-2.147.834-3.475-.428-2.077-2.768-4.038-4.308-5.326-1.93-1.616-11.971-8.662-15.102-10.41-2.11-1.179-4.106-1.694-6.494-1.798-.843-.037-1.6-.228-2.416.129-1.054.46-1.979 1.43-2.87 2.143-2.816 2.255-5.782 4.91-9.665 4.337-3.552-.524-6.49-3.55-9.061-5.784-2.717-2.361-5.126-5.103-7.702-7.617C39 56.59 35.578 53.44 32.472 50c-2.428-2.69-5.432-5.843-5.7-9.67-.235-3.354 2.007-6.013 4.027-8.463 1.288-1.563 2.73-3.005 2.755-5.137.061-5.16-3.124-8.976-5.931-12.995-2.023-2.896-4.32-5.941-6.391-8.8-1.187-1.637-2.172-2.8-3.686-3.91-.876-.643-1.74-1.22-2.869-.96z\"\n});\n\nvar SvgPhone = function SvgPhone(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/phone.79dbfba9.svg\";\nexport { SvgPhone as ReactComponent };","import React, { useState } from 'react';\nimport { shape, string, func } from 'prop-types';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { createMatchSelector, push } from 'connected-react-router';\nimport { isMobile } from 'react-device-detect';\nimport PhoneNumber from 'awesome-phonenumber';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBackspace } from '@fortawesome/pro-solid-svg-icons';\nimport PhoneIcon from '../PhoneIcon';\nimport styles from './Keypad.module.scss';\n\nconst newPhoneNumber = value => new PhoneNumber(value, 'US');\nconst phoneNumber = value =>\n    newPhoneNumber(value).getNumber('national') || value;\nconst phoneUri = value =>\n    newPhoneNumber(value).getNumber('rfc3966') || `tel:${value}`;\n\nconst Keypad = ({ router, pushRoute }) => {\n    const matchSelector = createMatchSelector('/keypad/:numberPath?');\n    const {\n        params: { numberPath = '' }\n    } = matchSelector({ router });\n\n    const [number, setNumber] = useState(phoneNumber(numberPath));\n\n    let numberInput = React.createRef();\n\n    // TEMP: Performing check for numberInput.focus while ref appears to be broken\n    const focusNumberInput = () =>\n        !isMobile && numberInput.focus && numberInput.focus();\n\n    const handleInputChange = ({ target: { value } }) =>\n        setNumber(phoneNumber(value));\n\n    const handleNumberButton = value => {\n        setNumber(phoneNumber(`${number}${value}`));\n        focusNumberInput();\n    };\n\n    const handleBackspaceButtonClick = () => {\n        setNumber(phoneNumber(number.slice(0, -1)));\n        focusNumberInput();\n    };\n\n    let backspaceButtonTimer;\n\n    const handleBackspaceButtonPress = () => {\n        backspaceButtonTimer = setTimeout(clearKeypad, 500);\n    };\n\n    const handleBackspaceButtonRelease = () => {\n        clearTimeout(backspaceButtonTimer);\n    };\n\n    const clearKeypad = () => {\n        const keypadPath = '/keypad';\n        setNumber('');\n        if (router.location.pathname !== keypadPath) pushRoute(keypadPath);\n        focusNumberInput();\n    };\n\n    const callNumber = event => {\n        if (event) event.preventDefault();\n        window.open(phoneUri(number), '_top');\n    };\n\n    const undefinedNumber = number === '';\n\n    const ButtonRow = ({ children, className = '' }) => (\n        <Row\n            className={classNames(\n                styles.buttonRow,\n                'mt-3',\n                'mb-sm-4',\n                `mb-${document.documentElement.clientHeight >= 635 ? 4 : 3}`,\n                className\n            )}\n        >\n            {children}\n        </Row>\n    );\n\n    const NumberCol = ({ value, label, className = '' }) => (\n        <Col>\n            <Button\n                variant=\"secondary\"\n                className={classNames(\n                    styles.button,\n                    styles.numberButton,\n                    className\n                )}\n                aria-label={value}\n                onClick={() => handleNumberButton(value)}\n            >\n                {value}\n                <span className={styles.numberLabel}>{label}</span>\n            </Button>\n        </Col>\n    );\n\n    return (\n        <Form onSubmit={callNumber}>\n            <Helmet title=\"Phone » Keypad\" />\n            {/* Number input */}\n            <Form.Control\n                size=\"lg\"\n                type=\"tel\"\n                //autoFocus={!isMobile}\n                value={number}\n                aria-label=\"Phone number\"\n                onChange={handleInputChange}\n                className={classNames(styles.input, 'mb-4', 'border-0')}\n                ref={numberInput}\n            />\n            <Container className={styles.root}>\n                {/* Number buttons */}\n                {\n                    [\n                        { value: '1' },\n                        { value: '2', label: 'ABC' },\n                        { value: '3', label: 'DEF' },\n                        { value: '4', label: 'GHI' },\n                        { value: '5', label: 'GHI' },\n                        { value: '6', label: 'MNO' },\n                        { value: '7', label: 'PQRS' },\n                        { value: '8', label: 'TUV' },\n                        { value: '9', label: 'WXYZ' },\n                        { value: '*', className: 'text-monospace' },\n                        { value: '0', label: '+' },\n                        { value: '#' }\n                    ].reduce(\n                        (acc, props, idx) => {\n                            acc.buttons.push(\n                                <NumberCol\n                                    key={idx}\n                                    aria-label={props.value}\n                                    {...props}\n                                />\n                            );\n                            if ((idx + 1) % 3 === 0)\n                                acc.rows.push(\n                                    <ButtonRow key={idx}>\n                                        {acc.buttons.slice(idx - 2)}\n                                    </ButtonRow>\n                                );\n                            return acc;\n                        },\n                        { rows: [], buttons: [] }\n                    ).rows\n                }\n                <ButtonRow>\n                    {/* Padding */}\n                    <Col>\n                        <div className={styles.button} />\n                    </Col>\n                    {/* Call button */}\n                    <Col>\n                        <Button\n                            type=\"submit\"\n                            variant=\"success\"\n                            disabled={undefinedNumber}\n                            className={classNames(\n                                styles.button,\n                                styles.callButton\n                            )}\n                            aria-label={`Call ${number}`}\n                            onClick={!undefinedNumber ? callNumber : undefined}\n                        >\n\n                            <PhoneIcon height=\"30px\" />\n                        </Button>\n                    </Col>\n                    <Col>\n                        {undefinedNumber ? (\n                            // Padding\n                            <div className={styles.button} />\n                        ) : (\n                            // Backspace / Clear button\n                            <OverlayTrigger\n                                placement=\"top\"\n                                overlay={\n                                    <Tooltip\n                                        id=\"tooltip-clear\"\n                                        className=\"mb-n3\"\n                                    >\n                                        <small>Hold to clear</small>\n                                    </Tooltip>\n                                }\n                            >\n                                <Button\n                                    variant=\"link\"\n                                    className={classNames(\n                                        styles.button,\n                                        styles.backspaceButton\n                                    )}\n                                    aria-label=\"Backspace / Hold to clear\"\n                                    onClick={handleBackspaceButtonClick}\n                                    onTouchStart={handleBackspaceButtonPress}\n                                    onTouchEnd={handleBackspaceButtonRelease}\n                                    onMouseDown={handleBackspaceButtonPress}\n                                    onMouseUp={handleBackspaceButtonRelease}\n                                    onMouseLeave={handleBackspaceButtonRelease}\n                                >\n                                    <FontAwesomeIcon icon={faBackspace} />\n                                </Button>\n                            </OverlayTrigger>\n                        )}\n                    </Col>\n                </ButtonRow>\n            </Container>\n        </Form>\n    );\n};\n\nKeypad.propTypes = {\n    router: shape({\n        location: shape({\n            pathname: string.isRequired\n        }).isRequired\n    }).isRequired,\n    pushRoute: func.isRequired\n};\n\nconst mapStateToProps = ({ router }) => ({\n    router\n});\n\nexport default connect(\n    mapStateToProps,\n    { pushRoute: push }\n)(Keypad);\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst Contacts = ({ contacts }) => (\n    <Container className=\"px-0\">\n        <Helmet title=\"Phone » Contacts\" />\n        <h2 className={classNames('ml-3', 'mb-4')}>Contacts</h2>\n        <ListGroup\n            variant={isMobile && 'flush'}\n            className={!isMobile && 'px-3'}\n        >\n            {contacts.map(({ name, phone, email }, idx) => (\n                <ListGroup.Item\n                    key={`${name}-${idx}`}\n                    action\n                    as={Link}\n                    to={`/contacts/${encodeURI(name)}`}\n                    aria-label={`${name}'s Contact`}\n                >\n                    {name}\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    </Container>\n);\n\nContacts.propTypes = {\n    contacts: arrayOf(\n        shape({\n            name: string,\n            email: string,\n            phone: string\n        })\n    ).isRequired\n};\n\nconst mapStateToProps = ({ contacts: { list: contacts } }) => ({\n    contacts\n});\n\nexport default connect(mapStateToProps)(Contacts);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerQuestion } from '@fortawesome/pro-solid-svg-icons';\n\nconst NotFound = () => (\n    <Container className=\"text-center\">\n        <h1>Oops!</h1>\n        <p>Looks like this page doesn&apos;t exist.</p>\n        <FontAwesomeIcon\n            icon={faMapMarkerQuestion}\n            size=\"5x\"\n            className=\"d-block mx-auto my-5\"\n        />\n        <Button variant=\"primary\" as={Link} to=\"/keypad\" type={null}>\n            Go Home\n        </Button>\n    </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { createMatchSelector } from 'connected-react-router';\nimport { Link } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faChevronLeft,\n    faPhone,\n    faEnvelope\n} from '@fortawesome/pro-solid-svg-icons';\nimport NotFound from '../NotFound';\n\nconst Contact = ({ router, contacts }) => {\n    const matchSelector = createMatchSelector('/contacts/:contactURI?');\n    const { params: { contactURI = '' } = {} } = matchSelector({ router });\n    const contact = contacts.find(({ name }) => name === decodeURI(contactURI));\n\n    if (!contact) return <NotFound />;\n\n    const { name, phone, email } = contact;\n    const Icon = ({ icon, variant }) => (\n        <FontAwesomeIcon\n            icon={icon}\n            fixedWidth\n            className={classNames('mr-3', `text-${variant}`)}\n        />\n    );\n\n    return (\n        <Container className=\"px-0\">\n            <Helmet title={`Phone » Contacts » ${name}`} />\n            <h4 className=\"ml-3\">\n                <Link\n                    to=\"/contacts\"\n                    className={classNames('mr-2', 'text-dark')}\n                >\n                    <FontAwesomeIcon\n                        icon={faChevronLeft}\n                        fixedWidth\n                        size=\"sm\"\n                    />\n                </Link>\n                {name}\n            </h4>\n            {phone || email ? (\n                <ListGroup\n                    variant={isMobile && 'flush'}\n                    className={!isMobile && 'px-3'}\n                >\n                    {phone && (\n                        <ListGroup.Item\n                            action\n                            as={Link}\n                            to={`/keypad/${phone}`}\n                            className={!email && 'border-bottom'}\n                            aria-label={`Call ${name}`}\n                        >\n                            <Icon icon={faPhone} variant=\"success\" />\n                            {phone}\n                        </ListGroup.Item>\n                    )}\n                    {email && (\n                        <ListGroup.Item\n                            action\n                            href={`mailto:${email}`}\n                            className=\"border-bottom\"\n                            aria-label={`Email ${name}`}\n                        >\n                            <Icon icon={faEnvelope} variant=\"primary\" />\n                            {email}\n                        </ListGroup.Item>\n                    )}\n                </ListGroup>\n            ) : (\n                <div className=\"text-center text-muted py-3\">No Data</div>\n            )}\n        </Container>\n    );\n};\n\nContact.propTypes = {\n    router: shape({}).isRequired,\n    contacts: arrayOf(\n        shape({\n            name: string,\n            email: string,\n            phone: string\n        })\n    ).isRequired\n};\n\nconst mapStateToProps = ({ router, contacts: { list: contacts } }) => ({\n    router,\n    contacts\n});\n\nexport default connect(mapStateToProps)(Contact);\n","import React from 'react';\nimport { string, oneOfType, object, array } from 'prop-types';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Input = ({ name, icon, className, ...props }) => (\n    <FormGroup>\n        <FormLabel htmlFor={name}>\n            <FontAwesomeIcon icon={icon} fixedWidth className=\"mr-1\" />\n            {name.charAt(0).toUpperCase() + name.slice(1)}\n        </FormLabel>\n        <FormControl className={className} id={name} {...props} />\n    </FormGroup>\n);\n\nInput.propTypes = {\n    name: string.isRequired,\n    icon: oneOfType([object, array, string]).isRequired,\n    className: string\n};\n\nInput.defaultProps = {\n    className: ''\n};\n\nexport default Input;\n","import { object, string } from 'yup';\nimport PhoneNumber from 'awesome-phonenumber';\n\nexport default object().shape({\n    name: string().required('A name is required'),\n    phone: string().test(\n        'phone-number',\n        'Phone number is invalid',\n        value => value === '' || new PhoneNumber(value, 'US').toJSON().possible\n    ),\n    email: string().email('Email is invalid')\n});\n","import React, { useState } from 'react';\nimport { func } from 'prop-types';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport PhoneNumber from 'awesome-phonenumber';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPhone, faEnvelope } from '@fortawesome/pro-solid-svg-icons';\nimport Input from './Input';\nimport schema from './schema';\nimport { addContact as _addContact } from '../../state/modules/contacts';\n\nconst phoneNumber = value =>\n    new PhoneNumber(value, 'US').getNumber('national') || value;\n\nconst NewContact = ({ addContact, pushRoute }) => {\n    const emptyContact = {\n        givenName: '',\n        familyName: '',\n        phone: '',\n        email: ''\n    };\n    const invalidFields = {\n        givenName: false,\n        familyName: false,\n        phone: false,\n        email: false\n    };\n    const [contact, setContact] = useState(emptyContact);\n    const [dirty, setDirty] = useState(false);\n    const [errors, setErrors] = useState([]);\n    const [invalid, setInvalid] = useState(invalidFields);\n    const { givenName, familyName, phone, email } = contact;\n\n    const handleChange = ({ target: { id, value } }) => {\n        setContact({\n            ...contact,\n            ...(id === 'phone'\n                ? {\n                      phone: phoneNumber(value)\n                  }\n                : { [id]: value })\n        });\n        setDirty(true);\n        setInvalid({\n            ...invalid,\n            ...(id === 'givenName' || id === 'familyName'\n                ? { givenName: false, familyName: false }\n                : { [id]: false })\n        });\n    };\n\n    const handleSubmit = async event => {\n        if (event) event.preventDefault();\n        const newContact = {\n            name:\n                givenName && familyName\n                    ? `${givenName} ${familyName}`\n                    : givenName || familyName,\n            phone,\n            email\n        };\n        try {\n            await schema.validate(newContact);\n            addContact(newContact);\n            pushRoute(`/contacts/${encodeURI(newContact.name)}`);\n        } catch ({ errors }) {\n            errors.forEach(function(error) {\n                if (error.includes('name'))\n                    setInvalid({\n                        ...invalid,\n                        givenName: true,\n                        familyName: true\n                    });\n                else if (error.includes('Phone'))\n                    setInvalid({ ...invalid, phone: true });\n                else if (error.includes('Email'))\n                    setInvalid({ ...invalid, email: true });\n            });\n            setErrors(errors);\n        }\n    };\n\n    const handleClearButton = () => {\n        setContact(emptyContact);\n        setDirty(false);\n        setErrors([]);\n        setInvalid(invalidFields);\n    };\n\n    return (\n        <Container>\n            <Helmet title=\"Phone » New Contact\" />\n            <h2>New Contact</h2>\n            <Form onSubmit={handleSubmit}>\n                {errors.length !== 0 && (\n                    <Alert variant=\"danger\">\n                        {errors.map(error => (\n                            <div key={error}>{error}</div>\n                        ))}\n                    </Alert>\n                )}\n                <Form.Row>\n                    <Form.Group className=\"col-6\">\n                        <Form.Label htmlFor=\"givenName\">\n                            <FontAwesomeIcon\n                                icon={faUser}\n                                fixedWidth\n                                className=\"mr-1\"\n                            />\n                            Name\n                        </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            id=\"givenName\"\n                            value={givenName}\n                            placeholder=\"First\"\n                            onChange={handleChange}\n                            isInvalid={invalid.givenName}\n                            autoFocus\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"col-6 mt-auto\">\n                        <Form.Control\n                            type=\"text\"\n                            id=\"familyName\"\n                            value={familyName}\n                            placeholder=\"Last\"\n                            onChange={handleChange}\n                            isInvalid={invalid.familyName}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Input\n                    name=\"phone\"\n                    type=\"tel\"\n                    icon={faPhone}\n                    value={phone}\n                    placeholder=\"(555) 555-5555\"\n                    onChange={handleChange}\n                    isInvalid={invalid.phone}\n                />\n                <Input\n                    name=\"email\"\n                    type=\"email\"\n                    icon={faEnvelope}\n                    value={email}\n                    placeholder=\"jon.doe@protonmail.com\"\n                    onChange={handleChange}\n                    isInvalid={invalid.email}\n                />\n                <Form.Row\n                    className={classNames(\n                        'pt-3',\n                        'text-center',\n                        'align-items-center'\n                    )}\n                >\n                    {/* Padding */}\n                    {dirty && <Col />}\n                    <Col>\n                        <Button\n                            type=\"submit\"\n                            variant=\"primary\"\n                            size=\"lg\"\n                            aria-label=\"Save Contact\"\n                        >\n                            Save\n                        </Button>\n                    </Col>\n                    {dirty && (\n                        <Col>\n                            <Button\n                                variant=\"outline-danger\"\n                                aria-label=\"Clear Contact\"\n                                onClick={handleClearButton}\n                            >\n                                Clear\n                            </Button>\n                        </Col>\n                    )}\n                </Form.Row>\n            </Form>\n        </Container>\n    );\n};\n\nNewContact.propTypes = {\n    addContact: func.isRequired,\n    pushRoute: func.isRequired\n};\n\nconst mapDispatchToProps = {\n    addContact: _addContact,\n    pushRoute: push\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(NewContact);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport Container from 'react-bootstrap/Container';\nimport PhoneIcon from '../PhoneIcon';\nimport styles from './About.module.scss';\n\nconst About = () => (\n    <Container>\n        <Helmet title=\"Phone » About\" />\n        <h2>About</h2>\n        <div\n            className={\n                classNames(\n                    styles.icon,\n                    'mx-auto',\n                    'my-5',\n                    'bg-success',\n                    'd-flex',\n                    'align-items-center',\n                    'justify-content-center'\n                )\n            }\n            aria-label=\"Phone Icon\"\n        >\n            <PhoneIcon height=\"162px\" />\n        </div>\n        <p className={classNames('text-center', 'text-muted')}>\n            &copy; Grant Burry {new Date().getFullYear()}\n        </p>\n    </Container>\n);\n\nexport default About;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Navbar from '../Navbar';\nimport Keypad from '../Keypad';\nimport Contacts from '../Contacts';\nimport Contact from '../Contact';\nimport NewContact from '../NewContact';\nimport About from '../About';\nimport NotFound from '../NotFound';\n\nconst App = () => (\n    <>\n        <Helmet defaultTitle=\"Phone\" />\n        <Navbar />\n        <div className=\"mt-4 mb-5 pb-5\" role=\"main\">\n            <Switch>\n                <Route\n                    path=\"/\"\n                    exact\n                    render={props => <Redirect to=\"/keypad\" {...props} />}\n                />\n                <Route path=\"/keypad/:numberPath?\" exact component={Keypad} />\n                <Route path=\"/contacts\" exact component={Contacts} />\n                <Route path=\"/contacts/:contactURI\" exact component={Contact} />\n                <Route path=\"/new-contact\" exact component={NewContact} />\n                <Route path=\"/about\" exact component={About} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport { shape, node } from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst ReduxProvider = ({ store, persistor, history, children }) => (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <ConnectedRouter history={history}>{children}</ConnectedRouter>\n        </PersistGate>\n    </Provider>\n);\n\nReduxProvider.propTypes = {\n    store: shape({}).isRequired,\n    persistor: shape({}).isRequired,\n    history: shape({}).isRequired,\n    children: node.isRequired\n};\n\nexport default ReduxProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport ReduxProvider from './components/ReduxProvider';\nimport configureStore from './state/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst { store, persistor, history } = configureStore();\nconst ConnectedRoot = () => (\n    <ReduxProvider store={store} persistor={persistor} history={history}>\n        <App />\n    </ReduxProvider>\n);\nconst rootElement = document.getElementById('root');\n\nrootElement.hasChildNodes()\n    ? hydrate(<ConnectedRoot />, rootElement)\n    : render(<ConnectedRoot />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport contacts from './contacts';\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    stateReconciler: autoMergeLevel2\n};\n\nconst createRootReducer = history =>\n    combineReducers({\n        router: connectRouter(history),\n        contacts: persistReducer(contactsPersistConfig, contacts),\n    });\n\nexport default createRootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport createRootReducer from '../modules';\n\nconst history = createBrowserHistory();\n\nconst configureStore = () =>\n    createStore(\n        createRootReducer(history),\n        {}, // initialState\n        applyMiddleware(routerMiddleware(history))\n    );\n\nexport default () => {\n    const store = configureStore();\n    const persistor = persistStore(store);\n    return { store, persistor, history };\n};\n","// Action Types\nconst ADD_CONTACT = 'phone/contacts/ADD_CONTACT';\n\n// Reducer\nexport default (\n    state = {\n        list: [\n            {\n                name: 'Robert Drake',\n                phone: '(555) 555-1111',\n                email: 'robert.drake@colorado.edu'\n            },\n            {\n                name: 'Emma Frost',\n                phone: '(555) 555-1112',\n                email: 'emma.frost@colorado.edu'\n            },\n            {\n                name: 'Doreen Green',\n                phone: '(555) 555-1113',\n                email: 'doreen.green@colorado.edu'\n            },\n            {\n                name: 'Jean Grey',\n                phone: '(555) 555-1114',\n                email: 'jean.grey@colorado.edu'\n            },\n            {\n                name: 'James Howlett',\n                phone: '(555) 555-1115',\n                email: 'james.howlett@colorado.edu'\n            },\n            {\n                name: 'Ororo Munroe',\n                phone: '(555) 555-1116',\n                email: 'ororo.munroe@colorado.edu'\n            },\n            {\n                name: 'Katherine Pryde',\n                phone: '(555) 555-1117',\n                email: 'katherine.pryde@colorado.edu'\n            },\n            {\n                name: 'Piotr Rasputin',\n                phone: '(555) 555-1118',\n                email: 'piotr.rasputin@colorado.edu'\n            },\n            {\n                name: 'Scott Summers',\n                phone: '(555) 555-1119',\n                email: 'scott.summers@colorado.edu'\n            },\n            {\n                name: 'Kurt Wagner',\n                phone: '(555) 555-1120',\n                email: 'kurt.wagner@colorado.edu'\n            },\n            {\n                name: 'Warren Worthington',\n                phone: '(555) 555-1121',\n                email: 'warren.worthington@colorado.edu'\n            },\n            {\n                name: 'Charles Xavier',\n                phone: '(555) 555-1122',\n                email: 'charles.xavier@colorado.edu'\n            }\n        ]\n    },\n    action = {}\n) => {\n    switch (action.type) {\n        case ADD_CONTACT:\n            return { list: [action.contact, ...state.list] };\n        default:\n            return state;\n    }\n};\n\n// Action Creators\nexport const addContact = contact => ({\n    type: ADD_CONTACT,\n    contact\n});\n"],"sourceRoot":""}