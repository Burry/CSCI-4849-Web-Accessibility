{"version":3,"sources":["components/Navbar/NavLink/NavLink.module.scss","components/Navbar/Navbar.module.scss","state/store/index.js","components/Keypad/Keypad.module.scss","components/Navbar/NavLink/NavLink.js","components/Navbar/Navbar.js","components/Keypad/Keypad.js","components/Contacts/Contacts.js","components/NotFound/NotFound.js","components/Contact/Contact.js","components/NewContact/Input/Input.js","components/NewContact/schema.js","components/NewContact/NewContact.js","components/App/App.js","components/ReduxProvider/ReduxProvider.js","serviceWorker.js","index.js","state/modules/index.js","state/store/configureStore.prod.js","state/modules/contacts.js"],"names":["module","exports","root","active","require","input","buttonRow","button","disabled","numberButton","numberLabel","callButton","backspaceButton","NavLink","_ref","to","label","icon","react_default","a","createElement","es_NavLink","className","classnames","styles","activeClassName","aria-label","concat","react_fontawesome_index_es","size","fixedWidth","Navbar","Navbar_default","variant","bg","fixed","Nav_default","Navbar_NavLink_NavLink","faTh","faBookUser","faUserPlus","newPhoneNumber","value","PhoneNumber","phoneNumber","getNumber","connect","_ref5","router","pushRoute","push","backspaceButtonTimer","_matchSelector$params","createMatchSelector","matchSelector","params","numberPath","_useState","useState","_useState2","Object","slicedToArray","number","setNumber","numberInput","React","createRef","focusNumberInput","isMobile","focus","handleBackspaceButtonPress","setTimeout","clearKeypad","handleBackspaceButtonRelease","clearTimeout","location","pathname","callNumber","event","preventDefault","window","open","undefinedNumber","ButtonRow","_ref3","children","_ref3$className","Row_default","document","documentElement","clientHeight","NumberCol","_ref4","_ref4$className","Col_default","Button_default","onClick","handleNumberButton","Form_default","onSubmit","Helmet","title","Control","type","onChange","_ref2","target","ref","Container_default","reduce","acc","props","idx","buttons","assign","key","rows","slice","undefined","faPhone","OverlayTrigger_default","placement","overlay","Tooltip_default","id","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","faBackspace","contacts","list","ListGroup_default","map","name","phone","email","Item","action","as","Link","encodeURI","NotFound","faMapMarkerQuestion","_matchSelector$params2","contactURI","contact","find","decodeURI","components_NotFound_NotFound","Icon","faChevronLeft","href","faEnvelope","Input","objectWithoutProperties","FormGroup_default","FormLabel_default","htmlFor","charAt","toUpperCase","FormControl_default","defaultProps","object","shape","string","required","test","toJSON","possible","mapDispatchToProps","addContact","_addContact","emptyContact","givenName","familyName","invalidFields","setContact","_useState3","_useState4","dirty","setDirty","_useState5","_useState6","errors","setErrors","_useState7","_useState8","invalid","setInvalid","handleChange","_ref2$target","objectSpread","defineProperty","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","newContact","_errors","wrap","_context","prev","next","schema","validate","t0","forEach","error","includes","stop","this","_x","apply","arguments","length","Alert_default","Row","Group","Label","faUser","placeholder","isInvalid","autoFocus","NewContact_Input_Input","App","Fragment","defaultTitle","components_Navbar_Navbar","Switch","Route","path","exact","render","Redirect","component","Keypad","Contacts","Contact","NewContact","ReduxProvider","store","persistor","history","es","integration_react","loading","esm","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","configureStore","ConnectedRoot","components_ReduxProvider_ReduxProvider","components_App_App","rootElement","getElementById","hasChildNodes","hydrate","src_ConnectedRoot","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","contactsPersistConfig","storage","stateReconciler","autoMergeLevel2","createRootReducer","combineReducers","connectRouter","persistReducer","createBrowserHistory","__webpack_exports__","createStore","applyMiddleware","routerMiddleware","persistStore","_Users_grant_Git_CSCI_4849_Web_Accessibility_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.ba4d695e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavLink_root__CTgS_\",\"active\":\"NavLink_active__2ugHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navbar_root__2DIhD\"};","module.exports =\n    process.env.NODE_ENV === 'development'\n        ? require('./configureStore.dev')\n        : require('./configureStore.prod');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Keypad_root__3lmgl\",\"input\":\"Keypad_input__33Efw\",\"buttonRow\":\"Keypad_buttonRow__Q0mbz\",\"button\":\"Keypad_button__3RTSB\",\"disabled\":\"Keypad_disabled__tHv9S\",\"numberButton\":\"Keypad_numberButton__3Bvp0\",\"numberLabel\":\"Keypad_numberLabel__2gcSt\",\"callButton\":\"Keypad_callButton__YwON9\",\"backspaceButton\":\"Keypad_backspaceButton__3RNr6\"};","import React from 'react';\nimport { string, oneOfType, object, array } from 'prop-types';\nimport classnames from 'classnames';\nimport { NavLink as RouterNavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './NavLink.module.scss';\n\nconst NavLink = ({ to, label, icon }) => (\n    <RouterNavLink\n        to={to}\n        className={classnames(styles.root, 'px-4', 'py-2')}\n        activeClassName={styles.active}\n        aria-label={`To ${label}`}\n    >\n        <FontAwesomeIcon\n            icon={icon}\n            size=\"lg\"\n            fixedWidth\n            className={classnames('d-block', 'm-auto')}\n        />\n        <small>{label}</small>\n    </RouterNavLink>\n);\n\nNavLink.propTypes = {\n    to: string.isRequired,\n    label: string.isRequired,\n    icon: oneOfType([object, array, string]).isRequired\n};\n\nexport default NavLink;\n","import React from 'react';\nimport classnames from 'classnames';\nimport BootstrapNavbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { faTh, faBookUser, faUserPlus } from '@fortawesome/pro-solid-svg-icons';\nimport NavLink from './NavLink';\nimport styles from './Navbar.module.scss';\n\nconst Navbar = () => (\n    <BootstrapNavbar\n        variant=\"light\"\n        bg=\"light\"\n        fixed=\"bottom\"\n        className={classnames(styles.root, 'p-0', 'bg-light')}\n    >\n        <Nav className=\"mx-auto\">\n            <NavLink to=\"/keypad\" label=\"Keypad\" icon={faTh} />\n            <NavLink to=\"/contacts\" label=\"Contacts\" icon={faBookUser} />\n            <NavLink to=\"/new-contact\" label=\"New Contact\" icon={faUserPlus} />\n        </Nav>\n    </BootstrapNavbar>\n);\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport { shape, string, func } from 'prop-types';\nimport classnames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { createMatchSelector, push } from 'connected-react-router';\nimport { isMobile } from 'react-device-detect';\nimport PhoneNumber from 'awesome-phonenumber';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone, faBackspace } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './Keypad.module.scss';\n\nconst newPhoneNumber = value => new PhoneNumber(value, 'US');\nconst phoneNumber = value =>\n    newPhoneNumber(value).getNumber('national') || value;\nconst phoneUri = value =>\n    newPhoneNumber(value).getNumber('rfc3966') || `tel:${value}`;\n\nconst Keypad = ({ router, pushRoute }) => {\n    const matchSelector = createMatchSelector('/keypad/:numberPath?');\n    const {\n        params: { numberPath = '' }\n    } = matchSelector({ router });\n\n    const [number, setNumber] = useState(phoneNumber(numberPath));\n\n    let numberInput = React.createRef();\n\n    // TEMP: Performing check for numberInput.focus while ref appears to be broken\n    const focusNumberInput = () =>\n        !isMobile && numberInput.focus && numberInput.focus();\n\n    const handleInputChange = ({ target: { value } }) =>\n        setNumber(phoneNumber(value));\n\n    const handleNumberButton = value => {\n        setNumber(phoneNumber(`${number}${value}`));\n        focusNumberInput();\n    };\n\n    const handleBackspaceButtonClick = () => {\n        setNumber(phoneNumber(number.slice(0, -1)));\n        focusNumberInput();\n    };\n\n    let backspaceButtonTimer;\n\n    const handleBackspaceButtonPress = () => {\n        backspaceButtonTimer = setTimeout(clearKeypad, 500);\n    };\n\n    const handleBackspaceButtonRelease = () => {\n        clearTimeout(backspaceButtonTimer);\n    };\n\n    const clearKeypad = () => {\n        const keypadPath = '/keypad';\n        setNumber('');\n        if (router.location.pathname !== keypadPath) pushRoute(keypadPath);\n        focusNumberInput();\n    };\n\n    const callNumber = event => {\n        if (event) event.preventDefault();\n        window.open(phoneUri(number), '_top');\n    };\n\n    const undefinedNumber = number === '';\n\n    const ButtonRow = ({ children, className = '' }) => (\n        <Row\n            className={classnames(\n                styles.buttonRow,\n                'mt-3',\n                'mb-sm-4',\n                `mb-${document.documentElement.clientHeight >= 635 ? 4 : 3}`,\n                className\n            )}\n        >\n            {children}\n        </Row>\n    );\n\n    const NumberCol = ({ value, label, className = '' }) => (\n        <Col>\n            <Button\n                variant=\"secondary\"\n                className={classnames(\n                    styles.button,\n                    styles.numberButton,\n                    className\n                )}\n                aria-label={value}\n                onClick={() => handleNumberButton(value)}\n            >\n                {value}\n                <span className={styles.numberLabel}>{label}</span>\n            </Button>\n        </Col>\n    );\n\n    return (\n        <Form onSubmit={callNumber}>\n            <Helmet title=\"Phone » Keypad\" />\n            {/* Number input */}\n            <Form.Control\n                size=\"lg\"\n                type=\"tel\"\n                //autoFocus={!isMobile}\n                value={number}\n                aria-label=\"Phone number\"\n                onChange={handleInputChange}\n                className={classnames(styles.input, 'mb-4', 'border-0')}\n                ref={numberInput}\n            />\n            <Container className={styles.root}>\n                {/* Number buttons */}\n                {\n                    [\n                        { value: '1' },\n                        { value: '2', label: 'ABC' },\n                        { value: '3', label: 'DEF' },\n                        { value: '4', label: 'GHI' },\n                        { value: '5', label: 'GHI' },\n                        { value: '6', label: 'MNO' },\n                        { value: '7', label: 'PQRS' },\n                        { value: '8', label: 'TUV' },\n                        { value: '9', label: 'WXYZ' },\n                        { value: '*', className: 'text-monospace' },\n                        { value: '0', label: '+' },\n                        { value: '#' }\n                    ].reduce(\n                        (acc, props, idx) => {\n                            acc.buttons.push(\n                                <NumberCol\n                                    key={idx}\n                                    aria-label={props.value}\n                                    {...props}\n                                />\n                            );\n                            if ((idx + 1) % 3 === 0)\n                                acc.rows.push(\n                                    <ButtonRow key={idx}>\n                                        {acc.buttons.slice(idx - 2)}\n                                    </ButtonRow>\n                                );\n                            return acc;\n                        },\n                        { rows: [], buttons: [] }\n                    ).rows\n                }\n                <ButtonRow>\n                    {/* Padding */}\n                    <Col>\n                        <div className={styles.button} />\n                    </Col>\n                    {/* Call button */}\n                    <Col>\n                        <Button\n                            type=\"submit\"\n                            variant=\"success\"\n                            disabled={undefinedNumber}\n                            className={classnames(\n                                styles.button,\n                                styles.callButton\n                            )}\n                            aria-label={`Call ${number}`}\n                            onClick={!undefinedNumber ? callNumber : undefined}\n                        >\n                            <FontAwesomeIcon icon={faPhone} />\n                        </Button>\n                    </Col>\n                    <Col>\n                        {undefinedNumber ? (\n                            // Padding\n                            <div className={styles.button} />\n                        ) : (\n                            // Backspace / Clear button\n                            <OverlayTrigger\n                                placement=\"top\"\n                                overlay={\n                                    <Tooltip\n                                        id=\"tooltip-clear\"\n                                        className=\"mb-n3\"\n                                    >\n                                        <small>Hold to clear</small>\n                                    </Tooltip>\n                                }\n                            >\n                                <Button\n                                    variant=\"link\"\n                                    className={classnames(\n                                        styles.button,\n                                        styles.backspaceButton\n                                    )}\n                                    aria-label=\"Backspace / Hold to clear\"\n                                    onClick={handleBackspaceButtonClick}\n                                    onTouchStart={handleBackspaceButtonPress}\n                                    onTouchEnd={handleBackspaceButtonRelease}\n                                    onMouseDown={handleBackspaceButtonPress}\n                                    onMouseUp={handleBackspaceButtonRelease}\n                                    onMouseLeave={handleBackspaceButtonRelease}\n                                >\n                                    <FontAwesomeIcon icon={faBackspace} />\n                                </Button>\n                            </OverlayTrigger>\n                        )}\n                    </Col>\n                </ButtonRow>\n            </Container>\n        </Form>\n    );\n};\n\nKeypad.propTypes = {\n    router: shape({\n        location: shape({\n            pathname: string.isRequired\n        }).isRequired\n    }).isRequired,\n    pushRoute: func.isRequired\n};\n\nconst mapStateToProps = ({ router }) => ({\n    router\n});\n\nexport default connect(\n    mapStateToProps,\n    { pushRoute: push }\n)(Keypad);\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst Contacts = ({ contacts }) => (\n    <Container className=\"px-0\">\n        <Helmet title=\"Phone » Contacts\" />\n        <h2 className={classnames('ml-3', 'mb-4')}>Contacts</h2>\n        <ListGroup\n            variant={isMobile && 'flush'}\n            className={!isMobile && 'px-3'}\n        >\n            {contacts.map(({ name, phone, email }, idx) => (\n                <ListGroup.Item\n                    key={`${name}-${idx}`}\n                    action\n                    as={Link}\n                    to={`/contacts/${encodeURI(name)}`}\n                    aria-label={`${name}'s Contact`}\n                >\n                    {name}\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    </Container>\n);\n\nContacts.propTypes = {\n    contacts: arrayOf(\n        shape({\n            name: string,\n            email: string,\n            phone: string\n        })\n    ).isRequired\n};\n\nconst mapStateToProps = ({ contacts: { list: contacts } }) => ({\n    contacts\n});\n\nexport default connect(mapStateToProps)(Contacts);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerQuestion } from '@fortawesome/pro-solid-svg-icons';\n\nconst NotFound = () => (\n    <Container className=\"text-center\">\n        <h1>Oops!</h1>\n        <p>Looks like this page doesn&apos;t exist.</p>\n        <FontAwesomeIcon\n            icon={faMapMarkerQuestion}\n            size=\"5x\"\n            className=\"d-block mx-auto my-5\"\n        />\n        <Button variant=\"primary\" as={Link} to=\"/keypad\" type={null}>\n            Go Home\n        </Button>\n    </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { createMatchSelector } from 'connected-react-router';\nimport { Link } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faChevronLeft,\n    faPhone,\n    faEnvelope\n} from '@fortawesome/pro-solid-svg-icons';\nimport NotFound from '../NotFound';\n\nconst Contact = ({ router, contacts }) => {\n    const matchSelector = createMatchSelector('/contacts/:contactURI?');\n    const { params: { contactURI = '' } = {} } = matchSelector({ router });\n    const contact = contacts.find(({ name }) => name === decodeURI(contactURI));\n\n    if (!contact) return <NotFound />;\n\n    const { name, phone, email } = contact;\n    const Icon = ({ icon, variant }) => (\n        <FontAwesomeIcon\n            icon={icon}\n            fixedWidth\n            className={classnames('mr-3', `text-${variant}`)}\n        />\n    );\n\n    return (\n        <Container className=\"px-0\">\n            <Helmet title={`Phone » Contacts » ${name}`} />\n            <h4 className=\"ml-3\">\n                <Link\n                    to=\"/contacts\"\n                    className={classnames('mr-2', 'text-dark')}\n                >\n                    <FontAwesomeIcon\n                        icon={faChevronLeft}\n                        fixedWidth\n                        size=\"sm\"\n                    />\n                </Link>\n                {name}\n            </h4>\n            {phone || email ? (\n                <ListGroup\n                    variant={isMobile && 'flush'}\n                    className={!isMobile && 'px-3'}\n                >\n                    {phone && (\n                        <ListGroup.Item\n                            action\n                            as={Link}\n                            to={`/keypad/${phone}`}\n                            className={!email && 'border-bottom'}\n                            aria-label={`Call ${name}`}\n                        >\n                            <Icon icon={faPhone} variant=\"success\" />\n                            {phone}\n                        </ListGroup.Item>\n                    )}\n                    {email && (\n                        <ListGroup.Item\n                            action\n                            href={`mailto:${email}`}\n                            className=\"border-bottom\"\n                            aria-label={`Email ${name}`}\n                        >\n                            <Icon icon={faEnvelope} variant=\"primary\" />\n                            {email}\n                        </ListGroup.Item>\n                    )}\n                </ListGroup>\n            ) : (\n                <div className=\"text-center text-muted py-3\">No Data</div>\n            )}\n        </Container>\n    );\n};\n\nContact.propTypes = {\n    router: shape({}).isRequired,\n    contacts: arrayOf(\n        shape({\n            name: string,\n            email: string,\n            phone: string\n        })\n    ).isRequired\n};\n\nconst mapStateToProps = ({ router, contacts: { list: contacts } }) => ({\n    router,\n    contacts\n});\n\nexport default connect(mapStateToProps)(Contact);\n","import React from 'react';\nimport { string, oneOfType, object, array } from 'prop-types';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Input = ({ name, icon, className, ...props }) => (\n    <FormGroup>\n        <FormLabel htmlFor={name}>\n            <FontAwesomeIcon icon={icon} fixedWidth className=\"mr-1\" />\n            {name.charAt(0).toUpperCase() + name.slice(1)}\n        </FormLabel>\n        <FormControl className={className} id={name} {...props} />\n    </FormGroup>\n);\n\nInput.propTypes = {\n    name: string.isRequired,\n    icon: oneOfType([object, array, string]).isRequired,\n    className: string\n};\n\nInput.defaultProps = {\n    className: ''\n};\n\nexport default Input;\n","import { object, string } from 'yup';\nimport PhoneNumber from 'awesome-phonenumber';\n\nexport default object().shape({\n    name: string().required('A name is required'),\n    phone: string().test(\n        'phone-number',\n        'Phone number is invalid',\n        value => value === '' || new PhoneNumber(value, 'US').toJSON().possible\n    ),\n    email: string().email('Email is invalid')\n});\n","import React, { useState } from 'react';\nimport { func } from 'prop-types';\nimport classnames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport PhoneNumber from 'awesome-phonenumber';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPhone, faEnvelope } from '@fortawesome/pro-solid-svg-icons';\nimport Input from './Input';\nimport schema from './schema';\nimport { addContact as _addContact } from '../../state/modules/contacts';\n\nconst phoneNumber = value =>\n    new PhoneNumber(value, 'US').getNumber('national') || value;\n\nconst NewContact = ({ addContact, pushRoute }) => {\n    const emptyContact = {\n        givenName: '',\n        familyName: '',\n        phone: '',\n        email: ''\n    };\n    const invalidFields = {\n        givenName: false,\n        familyName: false,\n        phone: false,\n        email: false\n    };\n    const [contact, setContact] = useState(emptyContact);\n    const [dirty, setDirty] = useState(false);\n    const [errors, setErrors] = useState([]);\n    const [invalid, setInvalid] = useState(invalidFields);\n    const { givenName, familyName, phone, email } = contact;\n\n    const handleChange = ({ target: { id, value } }) => {\n        setContact({\n            ...contact,\n            ...(id === 'phone'\n                ? {\n                      phone: phoneNumber(value)\n                  }\n                : { [id]: value })\n        });\n        setDirty(true);\n        setInvalid({\n            ...invalid,\n            ...(id === 'givenName' || id === 'familyName'\n                ? { givenName: false, familyName: false }\n                : { [id]: false })\n        });\n    };\n\n    const handleSubmit = async event => {\n        if (event) event.preventDefault();\n        const newContact = {\n            name:\n                givenName && familyName\n                    ? `${givenName} ${familyName}`\n                    : givenName || familyName,\n            phone,\n            email\n        };\n        try {\n            await schema.validate(newContact);\n            addContact(newContact);\n            pushRoute(`/contacts/${encodeURI(newContact.name)}`);\n        } catch ({ errors }) {\n            errors.forEach(function(error) {\n                if (error.includes('name'))\n                    setInvalid({\n                        ...invalid,\n                        givenName: true,\n                        familyName: true\n                    });\n                else if (error.includes('Phone'))\n                    setInvalid({ ...invalid, phone: true });\n                else if (error.includes('Email'))\n                    setInvalid({ ...invalid, email: true });\n            });\n            setErrors(errors);\n        }\n    };\n\n    const handleClearButton = () => {\n        setContact(emptyContact);\n        setDirty(false);\n        setErrors([]);\n        setInvalid(invalidFields);\n    };\n\n    return (\n        <Container>\n            <Helmet title=\"Phone » New Contact\" />\n            <h2>New Contact</h2>\n            <Form onSubmit={handleSubmit}>\n                {errors.length !== 0 && (\n                    <Alert variant=\"danger\">\n                        {errors.map(error => (\n                            <div key={error}>{error}</div>\n                        ))}\n                    </Alert>\n                )}\n                <Form.Row>\n                    <Form.Group className=\"col-6\">\n                        <Form.Label htmlFor=\"givenName\">\n                            <FontAwesomeIcon\n                                icon={faUser}\n                                fixedWidth\n                                className=\"mr-1\"\n                            />\n                            Name\n                        </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            id=\"givenName\"\n                            value={givenName}\n                            placeholder=\"First\"\n                            onChange={handleChange}\n                            isInvalid={invalid.givenName}\n                            autoFocus\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"col-6 mt-auto\">\n                        <Form.Control\n                            type=\"text\"\n                            id=\"familyName\"\n                            value={familyName}\n                            placeholder=\"Last\"\n                            onChange={handleChange}\n                            isInvalid={invalid.familyName}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Input\n                    name=\"phone\"\n                    type=\"tel\"\n                    icon={faPhone}\n                    value={phone}\n                    placeholder=\"(555) 555-5555\"\n                    onChange={handleChange}\n                    isInvalid={invalid.phone}\n                />\n                <Input\n                    name=\"email\"\n                    type=\"email\"\n                    icon={faEnvelope}\n                    value={email}\n                    placeholder=\"jon.doe@protonmail.com\"\n                    onChange={handleChange}\n                    isInvalid={invalid.email}\n                />\n                <Form.Row\n                    className={classnames(\n                        'pt-3',\n                        'text-center',\n                        'align-items-center'\n                    )}\n                >\n                    {/* Padding */}\n                    {dirty && <Col />}\n                    <Col>\n                        <Button\n                            type=\"submit\"\n                            variant=\"primary\"\n                            size=\"lg\"\n                            aria-label=\"Save Contact\"\n                        >\n                            Save\n                        </Button>\n                    </Col>\n                    {dirty && (\n                        <Col>\n                            <Button\n                                variant=\"outline-danger\"\n                                aria-label=\"Clear Contact\"\n                                onClick={handleClearButton}\n                            >\n                                Clear\n                            </Button>\n                        </Col>\n                    )}\n                </Form.Row>\n            </Form>\n        </Container>\n    );\n};\n\nNewContact.propTypes = {\n    addContact: func.isRequired,\n    pushRoute: func.isRequired\n};\n\nconst mapDispatchToProps = {\n    addContact: _addContact,\n    pushRoute: push\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(NewContact);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Navbar from '../Navbar';\nimport Keypad from '../Keypad';\nimport Contacts from '../Contacts';\nimport Contact from '../Contact';\nimport NewContact from '../NewContact';\nimport NotFound from '../NotFound';\n\nconst App = () => (\n    <>\n        <Helmet defaultTitle=\"Phone\" />\n        <Navbar />\n        <div className=\"mt-4 mb-5 pb-5\">\n            <Switch>\n                <Route\n                    path=\"/\"\n                    exact\n                    render={props => <Redirect to=\"/keypad\" {...props} />}\n                />\n                <Route path=\"/keypad/:numberPath?\" exact component={Keypad} />\n                <Route path=\"/contacts\" exact component={Contacts} />\n                <Route path=\"/contacts/:contactURI\" exact component={Contact} />\n                <Route path=\"/new-contact\" exact component={NewContact} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport { shape, node } from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst ReduxProvider = ({ store, persistor, history, children }) => (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <ConnectedRouter history={history}>{children}</ConnectedRouter>\n        </PersistGate>\n    </Provider>\n);\n\nReduxProvider.propTypes = {\n    store: shape({}).isRequired,\n    persistor: shape({}).isRequired,\n    history: shape({}).isRequired,\n    children: node.isRequired\n};\n\nexport default ReduxProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport ReduxProvider from './components/ReduxProvider';\nimport configureStore from './state/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst { store, persistor, history } = configureStore();\nconst ConnectedRoot = () => (\n    <ReduxProvider store={store} persistor={persistor} history={history}>\n        <App />\n    </ReduxProvider>\n);\nconst rootElement = document.getElementById('root');\n\nrootElement.hasChildNodes()\n    ? hydrate(<ConnectedRoot />, rootElement)\n    : render(<ConnectedRoot />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport contacts from './contacts';\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    stateReconciler: autoMergeLevel2\n};\n\nconst createRootReducer = history =>\n    combineReducers({\n        router: connectRouter(history),\n        contacts: persistReducer(contactsPersistConfig, contacts),\n    });\n\nexport default createRootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport createRootReducer from '../modules';\n\nconst history = createBrowserHistory();\n\nconst configureStore = () =>\n    createStore(\n        createRootReducer(history),\n        {}, // initialState\n        applyMiddleware(routerMiddleware(history))\n    );\n\nexport default () => {\n    const store = configureStore();\n    const persistor = persistStore(store);\n    return { store, persistor, history };\n};\n","// Action Types\nconst ADD_CONTACT = 'phone/contacts/ADD_CONTACT';\n\n// Reducer\nexport default (\n    state = {\n        list: [\n            {\n                name: 'Robert Drake',\n                phone: '(555) 555-1111',\n                email: 'robert.drake@colorado.edu'\n            },\n            {\n                name: 'Emma Frost',\n                phone: '(555) 555-1112',\n                email: 'emma.frost@colorado.edu'\n            },\n            {\n                name: 'Doreen Green',\n                phone: '(555) 555-1113',\n                email: 'doreen.green@colorado.edu'\n            },\n            {\n                name: 'Jean Grey',\n                phone: '(555) 555-1114',\n                email: 'jean.grey@colorado.edu'\n            },\n            {\n                name: 'James Howlett',\n                phone: '(555) 555-1115',\n                email: 'james.howlett@colorado.edu'\n            },\n            {\n                name: 'Ororo Munroe',\n                phone: '(555) 555-1116',\n                email: 'ororo.munroe@colorado.edu'\n            },\n            {\n                name: 'Katherine Pryde',\n                phone: '(555) 555-1117',\n                email: 'katherine.pryde@colorado.edu'\n            },\n            {\n                name: 'Piotr Rasputin',\n                phone: '(555) 555-1118',\n                email: 'piotr.rasputin@colorado.edu'\n            },\n            {\n                name: 'Scott Summers',\n                phone: '(555) 555-1119',\n                email: 'scott.summers@colorado.edu'\n            },\n            {\n                name: 'Kurt Wagner',\n                phone: '(555) 555-1120',\n                email: 'kurt.wagner@colorado.edu'\n            },\n            {\n                name: 'Warren Worthington',\n                phone: '(555) 555-1121',\n                email: 'warren.worthington@colorado.edu'\n            },\n            {\n                name: 'Charles Xavier',\n                phone: '(555) 555-1122',\n                email: 'charles.xavier@colorado.edu'\n            }\n        ]\n    },\n    action = {}\n) => {\n    switch (action.type) {\n        case ADD_CONTACT:\n            return { list: [action.contact, ...state.list] };\n        default:\n            return state;\n    }\n};\n\n// Action Creators\nexport const addContact = contact => ({\n    type: ADD_CONTACT,\n    contact\n});\n"],"sourceRoot":""}